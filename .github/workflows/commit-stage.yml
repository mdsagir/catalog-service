name: Commit Stage
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mdsagir/catalog-service
  VERSION: ${{ github.sha }}

jobs:
  setup-and-test:
    name: 🧪 Setup, Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: 🏗️ Build & run unit/integration tests
        run: |
          chmod +x gradlew
          ./gradlew build

  security-scan:
    name: 🔒 Code Security Scan
    needs: [setup-and-test]
    runs-on: ubuntu-22.04
    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      - name: 🧪 Run Anchore scan
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high

      - name: ☁️ Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  validate-k8s:
    name: ✅ Validate Kubernetes Manifests
    needs: [setup-and-test]
    runs-on: ubuntu-22.04
    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      - name: 🔧 Setup tools with arkade
        uses: alexellis/setup-arkade@v3

      - name: 🧰 Install kustomize and kubeconform
        uses: alexellis/arkade-get@master
        with:
          kustomize: latest
          kubeconform: latest

      - name: ✅ Validate manifests
        run: |
          kustomize build k8s | kubeconform --strict -

  publish-image:
    name: 📦 Package and Publish Image
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [setup-and-test, security-scan, validate-k8s]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: 🏗️ Build container image
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: 🔍 Scan image vulnerabilities
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high

      - name: ☁️ Upload container vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: 🔐 Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push image with SHA tag
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: 🚀 Tag and push image as latest
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
                     ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
